Algo to find the optimal Binary Search Tree:
1. Consider an array of size 2 x n , where n is the number of items.
2. Now create another array of size n+1 x n+1, as it starts from the 0-based index.
3. for ( i = 0 to n ) do 
    for ( j = 0 to n ) do 
        if ( i == j ) then // when j - i == 0
            cost[i][j] = 0
        else
        for ( k = i + 1 to  k<=j) do
            cost[i][j] = Min{ cost[i][k-1] + cost[k][j] } + W[i][j];  // here W[i][j] is the sum of frequency from i+1 to j.
        end
    end
4. Print the cost[0][n], k


// this is not correct................................................................